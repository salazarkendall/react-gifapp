{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","imagen","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","img","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAI7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAjBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,QCXZG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACpC,OACC,sBAAKC,UAAU,yCAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNMK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UACrDF,GAFqB,+DAIEG,MAAMR,GAJR,cAIhBS,EAJgB,gBAKCA,EAAUC,OALX,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAY,IAAD,EACjC,MAAO,CACNC,GAAID,EAAOC,GACXhB,MAAOe,EAAOf,MACdC,IAAG,UAAEc,EAAOE,cAAT,aAAE,EAAeC,iBAAiBjB,QAXjB,kBAcfY,GAde,4CAAH,sDCOPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACzB,ECL2B,SAACA,GAC5B,MAA0BpB,mBAAS,CAClC0B,KAAM,GACNQ,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACTlB,EAAQC,GAAUkB,MAAK,SAACC,GACvBC,YAAW,WACVJ,EAAS,CACRV,KAAMa,EACNL,SAAS,MAER,UAEF,CAACd,IAEGe,EDZ2BM,CAAarB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACC,qCACC,6BAAKd,IACJc,GACA,mBAAGlB,UAAU,mCAAb,qBAED,qBAAKA,UAAU,YAAf,SACEe,EAAOH,KAAI,SAACW,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIT,aEYZY,EAzBM,WAMpB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACC,qCACC,2CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACES,EAAWoB,KAAI,SAACR,GAChB,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MClB1BuB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.1de735d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Este es el Functional Component encargado del funcionamiento del input\r\n */\r\nexport const AddCategory = ({ setCategories }) => {\r\n\t/**\r\n\t * Lo siguiente es un hook comun, encargado de la funcionalidad del input\r\n\t */\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((categories) => [inputValue, ...categories]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__zoomIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=GGTJKrckkPhdSGdOc5ZFbTgpFCrcuuNp`;\r\n\tconst respuesta = await fetch(url);\r\n\tconst { data } = await respuesta.json();\r\n\r\n\tconst gifs = data.map((imagen) => {\r\n\t\treturn {\r\n\t\t\tid: imagen.id,\r\n\t\t\ttitle: imagen.title,\r\n\t\t\turl: imagen.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","// import React, { useEffect, useState } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && (\r\n\t\t\t\t<p className=\"animate__animated animate__flash\">Loading</p>\r\n\t\t\t)}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((img) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: img,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 1000);\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n// Esto es un Functional Component\r\nconst GifExpertApp = () => {\r\n\t/**\r\n\t * Normalmente las constantes que necesitamos que se encuentren en otros componentes, los ponemos dentro de hooks\r\n\t * Para poder hacer un hook mucho mas rapido podemos usar el snippet _ush_ el cual nos crea el hook\r\n\t * Nota: para poder usar el hook, debemos importar el useState de React\r\n\t */\r\n\tconst [categories, setCategories] = useState(['Death note']);\r\n\r\n\t/**\r\n\t * Todos los functional components deben retornar una estructura HTML que sera agregada al DOM\r\n\t * Dentro de estos componentes podemos agregar otros componentes como se muestra a continuacion\r\n\t */\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>GifExpert</h1>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => {\r\n\t\t\t\t\treturn <GifGrid key={category} category={category} />;\r\n\t\t\t\t})}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}